[{"C:\\Users\\zahra\\WebstormProjects\\react-exercise-three-monster\\src\\index.js":"1","C:\\Users\\zahra\\WebstormProjects\\react-exercise-three-monster\\src\\App.js":"2","C:\\Users\\zahra\\WebstormProjects\\react-exercise-three-monster\\src\\reportWebVitals.js":"3","C:\\Users\\zahra\\WebstormProjects\\react-exercise-three-monster\\src\\Components\\Header\\Header.jsx":"4","C:\\Users\\zahra\\WebstormProjects\\react-exercise-three-monster\\src\\Components\\MonsterCard\\MonsterCard.jsx":"5","C:\\Users\\zahra\\WebstormProjects\\react-exercise-three-monster\\src\\Components\\index.js":"6","C:\\Users\\zahra\\WebstormProjects\\react-exercise-three-monster\\src\\Components\\MonsterList\\MonsterList.jsx":"7","C:\\Users\\zahra\\WebstormProjects\\react-exercise-three-monster\\src\\Components\\MonsterPopular\\MonsterPopular.jsx":"8","C:\\Users\\zahra\\WebstormProjects\\react-exercise-three-monster\\src\\Components\\MonsterPage\\MonsterPage.jsx":"9"},{"size":546,"mtime":1640591482556,"results":"10","hashOfConfig":"11"},{"size":617,"mtime":1640681327577,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1637920910412,"results":"13","hashOfConfig":"11"},{"size":1577,"mtime":1640682987466,"results":"14","hashOfConfig":"11"},{"size":564,"mtime":1640601364176,"results":"15","hashOfConfig":"11"},{"size":362,"mtime":1640679400808,"results":"16","hashOfConfig":"11"},{"size":3778,"mtime":1640679696592,"results":"17","hashOfConfig":"11"},{"size":315,"mtime":1640676768265,"results":"18","hashOfConfig":"11"},{"size":1794,"mtime":1640680114273,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"f6fz5j",{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"C:\\Users\\zahra\\WebstormProjects\\react-exercise-three-monster\\src\\index.js",[],["42","43"],"C:\\Users\\zahra\\WebstormProjects\\react-exercise-three-monster\\src\\App.js",["44","45","46","47"],"import React from \"react\";\n// import './App.css';\nimport {useState, useEffect} from \"react\";\nimport {BrowserRouter as Router , Outlet, Route, Routes, link} from \"react-router-dom\";\nimport { Header,MonsterList,MonsterPage} from \"./Components\";\nfunction App() {\n\n    return (\n   <div>\n\n       <Router>\n           <Routes>\n               <Route path='/' element={<Header/>}/>\n               <Route path='/monsters' element={<MonsterList />}/>\n               <Route path=':monsterID' element={<MonsterPage/>}/>\n           </Routes>\n       </Router>\n\n       {/*<MonsterList />*/}\n   </div>\n    );\n}\n\n  export default App;\n","C:\\Users\\zahra\\WebstormProjects\\react-exercise-three-monster\\src\\reportWebVitals.js",[],"C:\\Users\\zahra\\WebstormProjects\\react-exercise-three-monster\\src\\Components\\Header\\Header.jsx",["48","49","50","51"],"C:\\Users\\zahra\\WebstormProjects\\react-exercise-three-monster\\src\\Components\\MonsterCard\\MonsterCard.jsx",[],"C:\\Users\\zahra\\WebstormProjects\\react-exercise-three-monster\\src\\Components\\index.js",[],"C:\\Users\\zahra\\WebstormProjects\\react-exercise-three-monster\\src\\Components\\MonsterList\\MonsterList.jsx",["52","53"],"import React from \"react\";\r\nimport {useEffect,useState} from \"react\";\r\nimport {MonsterCard} from \"..\";\r\nimport \"./MonsterList.style.css\";\r\nimport {Link} from \"react-router-dom\"\r\nimport notFonud from \"./../../img/not-found.jpg\"\r\nimport {Container,Row,Col,FormControl,InputGroup} from \"react-bootstrap\";\r\nconst MonsterList = () => {\r\n    const [monsterList , setMonsterList]= useState([])\r\n    const [filter,setFilter]= useState('');\r\n\r\n    //be sorate dasti\r\n    // const [monsterList , setMonsterList]= useState(\r\n    // [{\r\n    //     id: 1,\r\n    //     name: \"هیولای آنتن دار\",\r\n    //     username:\"zahraaa\",\r\n    //     website: \"قشنگترین هیولای آنتنی جهانم\"\r\n    // },\r\n    //     {\r\n    //         id: 1,\r\n    //         name: \"هیولای استقلالی\",\r\n    //         username:\"Reza\",\r\n    //         website: \"هیولای استقلالی هستم\"\r\n    //     },\r\n    //     {\r\n    //         id: 1,\r\n    //         name: \"هیولای مو قشنگ\",\r\n    //         username:\"masi\",\r\n    //         website: \"هیولایی با دنیای صورتی \"\r\n    //     },\r\n    //\r\n    //\r\n    // ])\r\n    const getMonster = ()=> {\r\n        fetch('https://jsonplaceholder.typicode.com/users ')\r\n            .then(response => response.json())\r\n            .then(data => setMonsterList(data));\r\n\r\n    }\r\n    useEffect(()=> {\r\n        getMonster();\r\n    })\r\n    return(\r\n       <Container>\r\n           <Row>\r\n               <Col>\r\n                   <InputGroup className=\"m-3 p-2\">\r\n                       <FormControl\r\n                           placeholder=\"میتونی در من جستوجو کنی... :)\"\r\n                           onChange={e => setFilter(e.target.value)}\r\n                           aria-label=\"Recipient's username\"\r\n                           aria-describedby=\"basic-addon2\"\r\n                       />\r\n                       <InputGroup.Text id=\"basic-addon2\">جستوجو</InputGroup.Text>\r\n                   </InputGroup>\r\n               {/*<FormControl className=\"m-3 p-3\" type=\"text\" placeholder=\"میتونی در من جستوجو کنی... :)\" />*/}\r\n               </Col>\r\n           </Row>\r\n           <Row>\r\n               {/*{monsterList.map((monster) =>*/}\r\n               {monsterList.filter(monster =>monster.name.toLowerCase().includes(filter.toLowerCase())).length ===0 ?\r\n                   <div className=\"not-found-monster\"><h2>هیچ هیولایی نیست</h2><img src={notFonud}/> </div>:\r\n                   monsterList.filter(monster =>monster.name.toLowerCase().includes(filter.toLowerCase())).map((monster) =>(\r\n                      <Col className=\"mb-3 \" key={monster.id} xs={12} sm={6} md={4} lg={3}>\r\n                          <Link className='text-decoration-none text-center' to={'/monsters/${monster.id}'}>\r\n                          <MonsterCard name={monster.name} description={monster.website} img={\"https://robohash.org/\"+monster.username}/>\r\n                          </Link>\r\n                      </Col>\r\n                  ))\r\n               }\r\n               {/*<Col xs={12} sm={6} md={4} lg={3}>*/}\r\n               {/*    <MonsterCard name='هیولای خشمگین' description=\"من یه هیولا عصبانی هستم >_< \" img=\"https://robohash.org/119\"/>*/}\r\n               {/*</Col>*/}\r\n               {/*<Col xs={12} sm={6} md={4} lg={3}>*/}\r\n               {/*    <MonsterCard/>*/}\r\n               {/*</Col>*/}\r\n               {/*<Col xs={12} sm={6} md={4} lg={3}>*/}\r\n               {/*    <MonsterCard/>*/}\r\n               {/*</Col>*/}\r\n               {/*<Col xs={12} sm={6} md={4} lg={3}>*/}\r\n               {/*    <MonsterCard/>*/}\r\n               {/*</Col>*/}\r\n\r\n           </Row>\r\n       </Container>\r\n    )\r\n}\r\n\r\nexport default MonsterList;","C:\\Users\\zahra\\WebstormProjects\\react-exercise-three-monster\\src\\Components\\MonsterPopular\\MonsterPopular.jsx",[],"C:\\Users\\zahra\\WebstormProjects\\react-exercise-three-monster\\src\\Components\\MonsterPage\\MonsterPage.jsx",["54","55","56"],"import {useEffect,useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Container,Card} from \"react-bootstrap\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst MonsterPage = ()=> {\r\n    const params= useParams();\r\n    const [monster,setMonster] = useState(\r\n        {\r\n            id: 1,\r\n            name: \"\",\r\n            username: \"\",\r\n            email: \"\",\r\n            address: {\r\n                street: \"\",\r\n                suite: \"\",\r\n                city: \"\",\r\n                zipcode: \"\",\r\n                geo: {\r\n                    lat: \"\",\r\n                    lng: \"\"\r\n                }\r\n            },\r\n            phone: \"\",\r\n            website: \"\",\r\n            company: {\r\n                name: \"\",\r\n                catchPhrase: \"\",\r\n                bs: \"\"\r\n            }\r\n    })\r\n    const getMonster = ()=>{\r\n        fetch('https://jsonplaceholder.typicode.com/users/${params.monsterID}')\r\n            .then(response => response.json())\r\n            .then(data => setMonster(data));\r\n    }\r\n    useEffect(()=> {\r\n        getMonster()\r\n\r\n    },[])\r\n    return(\r\n<Container>\r\n    <Card className='w-100 text-center mt-4 p-2 bg-info bg-opacity-25'>\r\n    <Card.Body>\r\n        <img style={{border:'2px solid rgba(146, 79, 173, 0.94)' ,borderRadius:'150px 150px 0px 0px'}} src={\"https://robohash.org/\"+monster.username}/>\r\n         <Card.Title>{monster.name}</Card.Title>\r\n        <Card.Title>{monster.username}</Card.Title>\r\n        <Card.Title>{monster.email}</Card.Title>\r\n        <Card.Title>{monster.phone}</Card.Title>\r\n        <Card.Title>{monster.website}</Card.Title>\r\n        <Link className='text-decoration-none ' to='/'>برو به صفحه اصلی</Link>\r\n    </Card.Body>\r\n    </Card>\r\n</Container>\r\n    )\r\n}\r\nexport default MonsterPage;",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":3,"column":9,"nodeType":"63","messageId":"64","endLine":3,"endColumn":17},{"ruleId":"61","severity":1,"message":"65","line":3,"column":19,"nodeType":"63","messageId":"64","endLine":3,"endColumn":28},{"ruleId":"61","severity":1,"message":"66","line":4,"column":35,"nodeType":"63","messageId":"64","endLine":4,"endColumn":41},{"ruleId":"61","severity":1,"message":"67","line":4,"column":58,"nodeType":"63","messageId":"64","endLine":4,"endColumn":62},{"ruleId":"61","severity":1,"message":"68","line":7,"column":9,"nodeType":"63","messageId":"64","endLine":7,"endColumn":20},{"ruleId":"61","severity":1,"message":"69","line":7,"column":22,"nodeType":"63","messageId":"64","endLine":7,"endColumn":33},{"ruleId":"61","severity":1,"message":"70","line":7,"column":34,"nodeType":"63","messageId":"64","endLine":7,"endColumn":48},{"ruleId":"71","severity":1,"message":"72","line":39,"column":13,"nodeType":"73","endLine":39,"endColumn":35},{"ruleId":"71","severity":1,"message":"72","line":63,"column":80,"nodeType":"73","endLine":63,"endColumn":101},{"ruleId":"74","severity":1,"message":"75","line":66,"column":82,"nodeType":"76","messageId":"77","endLine":66,"endColumn":107},{"ruleId":"61","severity":1,"message":"78","line":7,"column":11,"nodeType":"63","messageId":"64","endLine":7,"endColumn":17},{"ruleId":"74","severity":1,"message":"75","line":33,"column":15,"nodeType":"76","messageId":"77","endLine":33,"endColumn":79},{"ruleId":"71","severity":1,"message":"72","line":45,"column":9,"nodeType":"73","endLine":45,"endColumn":152},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Outlet' is defined but never used.","'link' is defined but never used.","'MonsterList' is defined but never used.","'MonsterPage' is defined but never used.","'MonsterPopular' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'params' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]