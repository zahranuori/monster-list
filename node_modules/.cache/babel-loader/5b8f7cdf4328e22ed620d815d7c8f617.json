{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zahra\\\\WebstormProjects\\\\react-exercise-three-monster\\\\src\\\\Components\\\\MonsterPage\\\\MonsterPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Card } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getMonster = async id => {\n  const response = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`);\n  const data = await response.json();\n  console.log(data);\n  return data;\n}; // const getMonsterP = (id) => {\n//     return new Promise((resolve, reject) => {\n//         fetch(`https://jsonplaceholder.typicode.com/users/${id}`)\n//             .then(res => res.json())\n//             .then(data => resolve(data))\n//\n//     })\n// }\n\n\nconst MonsterPage = () => {\n  _s();\n\n  const params = useParams();\n  const [loading, setLoading] = useState(true);\n  const [monster, setMonster] = useState({\n    id: 1,\n    name: \"\",\n    username: \"\",\n    email: \"\",\n    phone: \"\",\n    website: \"\"\n  });\n  useEffect(() => {\n    setLoading(true);\n    getMonster(params.monsterID).then(data => {\n      setMonster(data);\n      setLoading(false);\n    });\n    console.log();\n  }, [params.monsterID]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-100 text-center mt-4 p-2 bg-info bg-opacity-25\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u06CC\\u06A9\\u0645 \\u0635\\u0628\\u0631 \\u06A9\\u0646 \\u0627\\u0644\\u0627\\u0646 \\u0647\\u06CC\\u0648\\u0644\\u0627\\u0647\\u0627 \\u0645\\u06CC\\u0631\\u0633\\u06CC\\u0646 :)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            border: '2px solid rgba(146, 79, 173, 0.94)',\n            borderRadius: '150px 150px 0px 0px'\n          },\n          src: 'https://robohash.org/' + monster.username,\n          alt: \"avatar monster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: monster.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: monster.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: monster.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: monster.phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: monster.website\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"text-decoration-none\",\n          to: \"/monsters\",\n          children: \"\\u0628\\u0631\\u0648 \\u0628\\u0647 \\u0635\\u0641\\u062D\\u0647 \\u0627\\u0635\\u0644\\u06CC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 1\n  }, this);\n};\n\n_s(MonsterPage, \"U7MGT1XyoSQjcptXITMjDTD76lo=\", false, function () {\n  return [useParams];\n});\n\n_c = MonsterPage;\nexport default MonsterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MonsterPage\");","map":{"version":3,"sources":["C:/Users/zahra/WebstormProjects/react-exercise-three-monster/src/Components/MonsterPage/MonsterPage.jsx"],"names":["useEffect","useState","Link","Container","Card","useParams","getMonster","id","response","fetch","data","json","console","log","MonsterPage","params","loading","setLoading","monster","setMonster","name","username","email","phone","website","monsterID","then","border","borderRadius"],"mappings":"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","sourcesContent":["import {useEffect,useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Container,Card} from \"react-bootstrap\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\n\r\nconst getMonster = async (id) => {\r\n    const response = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n    const data = await response.json()\r\n    console.log(data)\r\n    return (data)\r\n}\r\n// const getMonsterP = (id) => {\r\n//     return new Promise((resolve, reject) => {\r\n//         fetch(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n//             .then(res => res.json())\r\n//             .then(data => resolve(data))\r\n//\r\n//     })\r\n// }\r\n\r\n\r\nconst MonsterPage = ()=> {\r\n    const params = useParams();\r\n    const [loading, setLoading] = useState(true)\r\n    const [monster, setMonster] = useState(\r\n        {\r\n            id: 1,\r\n            name: \"\",\r\n            username: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            website: \"\",\r\n    })\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        getMonster(params.monsterID).then(data => {\r\n            setMonster(data)\r\n            setLoading(false)\r\n        })\r\n        console.log()\r\n    }, [params.monsterID])\r\n    return(\r\n<Container>\r\n    <Card className='w-100 text-center mt-4 p-2 bg-info bg-opacity-25'>\r\n        {\r\n            loading ? <h1>یکم صبر کن الان هیولاها میرسین :)</h1> :\r\n    <Card.Body>\r\n        <img style={{border:'2px solid rgba(146, 79, 173, 0.94)' ,borderRadius:'150px 150px 0px 0px'}} src={'https://robohash.org/'+monster.username} alt='avatar monster'/>\r\n         <Card.Title>{monster.name}</Card.Title>\r\n        <Card.Title>{monster.username}</Card.Title>\r\n        <Card.Title>{monster.email}</Card.Title>\r\n        <Card.Title>{monster.phone}</Card.Title>\r\n        <Card.Title>{monster.website}</Card.Title>\r\n        <Link className='text-decoration-none' to='/monsters'>برو به صفحه اصلی</Link>\r\n    </Card.Body>\r\n }\r\n    </Card>\r\n</Container>\r\n    )\r\n}\r\nexport default MonsterPage;"]},"metadata":{},"sourceType":"module"}