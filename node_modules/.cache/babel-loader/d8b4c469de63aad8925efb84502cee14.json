{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zahra\\\\WebstormProjects\\\\react-exercise-three-monster\\\\src\\\\Components\\\\MonsterPage\\\\MonsterPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Card } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MonsterPage = () => {\n  _s();\n\n  const params = useParams();\n  const [monster, setMonster] = useState({\n    id: 1,\n    name: \"\",\n    username: \"\",\n    email: \"\",\n    address: {\n      street: \"\",\n      suite: \"\",\n      city: \"\",\n      zipcode: \"\",\n      geo: {\n        lat: \"\",\n        lng: \"\"\n      }\n    },\n    phone: \"\",\n    website: \"\",\n    company: {\n      name: \"\",\n      catchPhrase: \"\",\n      bs: \"\"\n    }\n  });\n\n  const getMonster = () => {\n    fetch(`https://jsonplaceholder.typicode.com/users/${params.monsterID}`).then(response => response.json()).then(data => setMonster(data));\n  };\n\n  useEffect(() => {\n    getMonster();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-100 text-center mt-4 p-2 bg-info bg-opacity-25\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            border: '2px solid rgba(146, 79, 173, 0.94)',\n            borderRadius: '150px 150px 0px 0px'\n          },\n          src: \"https://robohash.org/\" + monster.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: monster.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: monster.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: monster.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: monster.phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: monster.website\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"text-decoration-none \",\n          to: \"/\",\n          children: \"\\u0628\\u0631\\u0648 \\u0628\\u0647 \\u0635\\u0641\\u062D\\u0647 \\u0627\\u0635\\u0644\\u06CC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 1\n  }, this);\n};\n\n_s(MonsterPage, \"ZEEfCobcyhUUTFYmODvV/0abHY0=\", false, function () {\n  return [useParams];\n});\n\n_c = MonsterPage;\nexport default MonsterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MonsterPage\");","map":{"version":3,"sources":["C:/Users/zahra/WebstormProjects/react-exercise-three-monster/src/Components/MonsterPage/MonsterPage.jsx"],"names":["useEffect","useState","Link","Container","Card","useParams","MonsterPage","params","monster","setMonster","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","getMonster","fetch","monsterID","then","response","json","data","border","borderRadius"],"mappings":";;;AAAA,SAAQA,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,SAAR,EAAkBC,IAAlB,QAA6B,iBAA7B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;;;AAEA,MAAMC,WAAW,GAAG,MAAK;AAAA;;AACrB,QAAMC,MAAM,GAAEF,SAAS,EAAvB;AACA,QAAM,CAACG,OAAD,EAASC,UAAT,IAAuBR,QAAQ,CACjC;AACIS,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,EAFV;AAGIC,IAAAA,QAAQ,EAAE,EAHd;AAIIC,IAAAA,KAAK,EAAE,EAJX;AAKIC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,EADH;AAELC,MAAAA,KAAK,EAAE,EAFF;AAGLC,MAAAA,IAAI,EAAE,EAHD;AAILC,MAAAA,OAAO,EAAE,EAJJ;AAKLC,MAAAA,GAAG,EAAE;AACDC,QAAAA,GAAG,EAAE,EADJ;AAEDC,QAAAA,GAAG,EAAE;AAFJ;AALA,KALb;AAeIC,IAAAA,KAAK,EAAE,EAfX;AAgBIC,IAAAA,OAAO,EAAE,EAhBb;AAiBIC,IAAAA,OAAO,EAAE;AACLb,MAAAA,IAAI,EAAE,EADD;AAELc,MAAAA,WAAW,EAAE,EAFR;AAGLC,MAAAA,EAAE,EAAE;AAHC;AAjBb,GADiC,CAArC;;AAwBA,QAAMC,UAAU,GAAG,MAAI;AACnBC,IAAAA,KAAK,CAAE,8CAA6CrB,MAAM,CAACsB,SAAU,EAAhE,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIxB,UAAU,CAACwB,IAAD,CAF5B;AAGH,GAJD;;AAKAjC,EAAAA,SAAS,CAAC,MAAK;AACX2B,IAAAA,UAAU;AAEb,GAHQ,EAGP,EAHO,CAAT;AAIA,sBACJ,QAAC,SAAD;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,kDAAhB;AAAA,6BACA,QAAC,IAAD,CAAM,IAAN;AAAA,gCACI;AAAK,UAAA,KAAK,EAAE;AAACO,YAAAA,MAAM,EAAC,oCAAR;AAA8CC,YAAAA,YAAY,EAAC;AAA3D,WAAZ;AAA+F,UAAA,GAAG,EAAE,0BAAwB3B,OAAO,CAACI;AAApI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEK,QAAC,IAAD,CAAM,KAAN;AAAA,oBAAaJ,OAAO,CAACG;AAArB;AAAA;AAAA;AAAA;AAAA,gBAFL,eAGI,QAAC,IAAD,CAAM,KAAN;AAAA,oBAAaH,OAAO,CAACI;AAArB;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,IAAD,CAAM,KAAN;AAAA,oBAAaJ,OAAO,CAACK;AAArB;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI,QAAC,IAAD,CAAM,KAAN;AAAA,oBAAaL,OAAO,CAACc;AAArB;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI,QAAC,IAAD,CAAM,KAAN;AAAA,oBAAad,OAAO,CAACe;AAArB;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,uBAAhB;AAAwC,UAAA,EAAE,EAAC,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADI;AAeH,CAlDD;;GAAMjB,W;UACYD,S;;;KADZC,W;AAmDN,eAAeA,WAAf","sourcesContent":["import {useEffect,useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Container,Card} from \"react-bootstrap\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst MonsterPage = ()=> {\r\n    const params= useParams();\r\n    const [monster,setMonster] = useState(\r\n        {\r\n            id: 1,\r\n            name: \"\",\r\n            username: \"\",\r\n            email: \"\",\r\n            address: {\r\n                street: \"\",\r\n                suite: \"\",\r\n                city: \"\",\r\n                zipcode: \"\",\r\n                geo: {\r\n                    lat: \"\",\r\n                    lng: \"\"\r\n                }\r\n            },\r\n            phone: \"\",\r\n            website: \"\",\r\n            company: {\r\n                name: \"\",\r\n                catchPhrase: \"\",\r\n                bs: \"\"\r\n            }\r\n    })\r\n    const getMonster = ()=>{\r\n        fetch(`https://jsonplaceholder.typicode.com/users/${params.monsterID}`)\r\n            .then(response => response.json())\r\n            .then(data => setMonster(data));\r\n    }\r\n    useEffect(()=> {\r\n        getMonster()\r\n\r\n    },[])\r\n    return(\r\n<Container>\r\n    <Card className='w-100 text-center mt-4 p-2 bg-info bg-opacity-25'>\r\n    <Card.Body>\r\n        <img style={{border:'2px solid rgba(146, 79, 173, 0.94)' ,borderRadius:'150px 150px 0px 0px'}} src={\"https://robohash.org/\"+monster.username}/>\r\n         <Card.Title>{monster.name}</Card.Title>\r\n        <Card.Title>{monster.username}</Card.Title>\r\n        <Card.Title>{monster.email}</Card.Title>\r\n        <Card.Title>{monster.phone}</Card.Title>\r\n        <Card.Title>{monster.website}</Card.Title>\r\n        <Link className='text-decoration-none ' to='/'>برو به صفحه اصلی</Link>\r\n    </Card.Body>\r\n    </Card>\r\n</Container>\r\n    )\r\n}\r\nexport default MonsterPage;"]},"metadata":{},"sourceType":"module"}