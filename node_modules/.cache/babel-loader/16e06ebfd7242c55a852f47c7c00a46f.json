{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zahra\\\\WebstormProjects\\\\react-exercise-three-monster\\\\src\\\\Components\\\\MonsterList\\\\MonsterList.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { MonsterCard } from \"..\";\nimport { Container, Row, Col, FormControl } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MonsterList = () => {\n  _s();\n\n  const [monsterList, setMonsterList] = useState([]); //be sorate dasti\n  // const [monsterList , setMonsterList]= useState(\n  // [{\n  //     id: 1,\n  //     name: \"هیولای آنتن دار\",\n  //     username:\"zahraaa\",\n  //     website: \"قشنگترین هیولای آنتنی جهانم\"\n  // },\n  //     {\n  //         id: 1,\n  //         name: \"هیولای استقلالی\",\n  //         username:\"Reza\",\n  //         website: \"هیولای استقلالی هستم\"\n  //     },\n  //     {\n  //         id: 1,\n  //         name: \"هیولای مو قشنگ\",\n  //         username:\"masi\",\n  //         website: \"هیولایی با دنیای صورتی \"\n  //     },\n  //\n  //\n  // ])\n\n  const getMonster = () => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(data => setMonsterList(data));\n  };\n\n  useEffect(() => {\n    getMonster();\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"m-3 p-3\",\n          type: \"text\",\n          placeholder: \"\\u0645\\u06CC\\u062A\\u0648\\u0646\\u06CC \\u062F\\u0631 \\u0645\\u0646 \\u062C\\u0633\\u062A\\u0648\\u062C\\u0648 \\u06A9\\u0646\\u06CC... :)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: monsterList.map(monster => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(MonsterCard, {\n          name: monster.name,\n          description: monster.website,\n          img: \"https://robohash.org/\" + monster.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 27\n        }, this)\n      }, monster.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 23\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 8\n  }, this);\n};\n\n_s(MonsterList, \"CFxg5M/M+qMtjwJEGx/ZFbTUe7I=\");\n\n_c = MonsterList;\nexport default MonsterList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MonsterList\");","map":{"version":3,"sources":["C:/Users/zahra/WebstormProjects/react-exercise-three-monster/src/Components/MonsterList/MonsterList.jsx"],"names":["React","useEffect","useState","MonsterCard","Container","Row","Col","FormControl","MonsterList","monsterList","setMonsterList","getMonster","fetch","then","response","json","data","map","monster","name","website","username","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;AACA,SAAQC,WAAR,QAA0B,IAA1B;AACA,SAAQC,SAAR,EAAkBC,GAAlB,EAAsBC,GAAtB,EAA0BC,WAA1B,QAA4C,iBAA5C;;;AACA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,WAAD,EAAeC,cAAf,IAAgCR,QAAQ,CAAC,EAAD,CAA9C,CADsB,CAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMS,UAAU,GAAG,MAAK;AACpBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIN,cAAc,CAACM,IAAD,CAFhC;AAIH,GALD;;AAMAf,EAAAA,SAAS,CAAC,MAAK;AACXU,IAAAA,UAAU;AACb,GAFQ,CAAT;AAGA,sBACG,QAAC,SAAD;AAAA,4BACI,QAAC,GAAD;AAAA,6BACI,QAAC,GAAD;AAAA,+BACA,QAAC,WAAD;AAAa,UAAA,SAAS,EAAC,SAAvB;AAAiC,UAAA,IAAI,EAAC,MAAtC;AAA6C,UAAA,WAAW,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,GAAD;AAAA,gBAEOF,WAAW,CAACQ,GAAZ,CAAiBC,OAAD,iBACZ,QAAC,GAAD;AAAsB,QAAA,EAAE,EAAE,EAA1B;AAA8B,QAAA,EAAE,EAAE,CAAlC;AAAqC,QAAA,EAAE,EAAE,CAAzC;AAA4C,QAAA,EAAE,EAAE,CAAhD;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,IAAI,EAAEA,OAAO,CAACC,IAA3B;AAAiC,UAAA,WAAW,EAAED,OAAO,CAACE,OAAtD;AAA+D,UAAA,GAAG,EAAE,0BAAwBF,OAAO,CAACG;AAApG;AAAA;AAAA;AAAA;AAAA;AADJ,SAAUH,OAAO,CAACI,EAAlB;AAAA;AAAA;AAAA;AAAA,cADJ;AAFP;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AA+BH,CAjED;;GAAMd,W;;KAAAA,W;AAmEN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\nimport {useEffect,useState} from \"react\";\r\nimport {MonsterCard} from \"..\";\r\nimport {Container,Row,Col,FormControl} from \"react-bootstrap\";\r\nconst MonsterList = () => {\r\n    const [monsterList , setMonsterList]= useState([])\r\n    //be sorate dasti\r\n    // const [monsterList , setMonsterList]= useState(\r\n    // [{\r\n    //     id: 1,\r\n    //     name: \"هیولای آنتن دار\",\r\n    //     username:\"zahraaa\",\r\n    //     website: \"قشنگترین هیولای آنتنی جهانم\"\r\n    // },\r\n    //     {\r\n    //         id: 1,\r\n    //         name: \"هیولای استقلالی\",\r\n    //         username:\"Reza\",\r\n    //         website: \"هیولای استقلالی هستم\"\r\n    //     },\r\n    //     {\r\n    //         id: 1,\r\n    //         name: \"هیولای مو قشنگ\",\r\n    //         username:\"masi\",\r\n    //         website: \"هیولایی با دنیای صورتی \"\r\n    //     },\r\n    //\r\n    //\r\n    // ])\r\n    const getMonster = ()=> {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(data => setMonsterList(data));\r\n\r\n    }\r\n    useEffect(()=> {\r\n        getMonster();\r\n    })\r\n    return(\r\n       <Container>\r\n           <Row>\r\n               <Col>\r\n               <FormControl className=\"m-3 p-3\" type=\"text\" placeholder=\"میتونی در من جستوجو کنی... :)\" />\r\n               </Col>\r\n           </Row>\r\n           <Row>\r\n               {\r\n                  monsterList.map((monster) =>(\r\n                      <Col key={monster.id} xs={12} sm={6} md={4} lg={3}>\r\n                          <MonsterCard name={monster.name} description={monster.website} img={\"https://robohash.org/\"+monster.username}/>\r\n                      </Col>\r\n                  ))\r\n               }\r\n               {/*<Col xs={12} sm={6} md={4} lg={3}>*/}\r\n               {/*    <MonsterCard name='هیولای خشمگین' description=\"من یه هیولا عصبانی هستم >_< \" img=\"https://robohash.org/119\"/>*/}\r\n               {/*</Col>*/}\r\n               {/*<Col xs={12} sm={6} md={4} lg={3}>*/}\r\n               {/*    <MonsterCard/>*/}\r\n               {/*</Col>*/}\r\n               {/*<Col xs={12} sm={6} md={4} lg={3}>*/}\r\n               {/*    <MonsterCard/>*/}\r\n               {/*</Col>*/}\r\n               {/*<Col xs={12} sm={6} md={4} lg={3}>*/}\r\n               {/*    <MonsterCard/>*/}\r\n               {/*</Col>*/}\r\n\r\n           </Row>\r\n       </Container>\r\n    )\r\n}\r\n\r\nexport default MonsterList;"]},"metadata":{},"sourceType":"module"}